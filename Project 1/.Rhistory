TRUE * 1
FALSE * 1
knitr::opts_chunk$set(echo = TRUE)
observations <- f + rnorm(length(x), mean = 0, sd = 15)
set.seed(123)
library(ggplot2)
true_relationship <- function(x) { return(6*xˆ3 + 6*xˆ2 - 12*x) }
x <- seq(-3, 2, by = 0.1)
f <- true_relationship(x)
true_relationship <- function(x) { return(6*xˆ3 + 6*xˆ2 - 12*x) }
#set.seed(123)
library(ggplot2)
true_relationship <- function(x) { return(6*xˆ3 + 6*xˆ2 - 12*x) }
x <- seq(-3, 2, by = 0.1)
f <- true_relationship(x)
View(true_relationship)
set.seed(123)
library(ggplot2)
true_relationship <- function(x) {
return(6*x^3 + 6*x^2 - 12*x)
}
x <- seq(-3, 2, by = 0.1)
f <- true_relationship(x)
ggplot() + geom_line(aes(x = x, y = f), color = "black")
knitr::opts_chunk$set(echo = TRUE)
observations <- f + rnorm(length(x), mean = 0, sd = 15)
model1 <- lm(observations ~ poly(x, 1))
predictions1 <- predict(model1, newdata = data.frame(x = x))
model25 <- lm(observations ~ poly(x, 25))
predictions25 <- predict(model25, newdata = data.frame(x = x))
data <- data.frame(x = x,
f = f,
observations = observations,
lm = predictions1,
pm = predictions25)
ggplot(data, aes(x = x)) +
geom_line(aes(y = f), color = "black") +
geom_point(aes(y = observations), color = "blue", shape = 1) +
geom_line(aes(y = lm), color = "red", linetype = "solid") +
geom_line(aes(y = pm), color = "orange", linetype = "solid") +
geom_point(aes(x = 1, y = data[x == 1, "lm"]), color = "red", shape=2) +
geom_point(aes(x = 1, y = data[x == 1, "pm"]), color = "orange", shape=2)
observations_new <- f + rnorm(length(x), mean = 0, sd = 15)
model1 <- lm(observations_new ~ poly(x, 1))
predictions1 <- predict(model1, newdata = data.frame(x = x))
model25 <- lm(observations_new ~ poly(x, 25))
predictions25 <- predict(model25, newdata = data.frame(x = x))
data <- data.frame(x = x,
f = f,
observations = observations_new,
lm = predictions1,
pm = predictions25)
ggplot(data, aes(x = x)) +
geom_line(aes(y = f), color = "black") +
geom_point(aes(y = observations_new), color = "blue", shape = 1) +
geom_line(aes(y = lm), color = "red", linetype = "solid") +
geom_line(aes(y = pm), color = "orange", linetype = "solid") +
geom_point(aes(x = 1, y = data[x == 1, "lm"]), color = "red", shape=2) +
geom_point(aes(x = 1, y = data[x == 1, "pm"]), color = "orange", shape=2)
results1 <- data.frame(x = 1, f_pred = 0)
for (i in 1:500) {
x <- seq(-3, 2, by = 0.1)
f <- true_relationship(x)
temp_observations <- f + rnorm(length(x), mean=0, sd=15)
model1 <- lm(temp_observations ~ poly(x, 1))
results1[i, 1] <- 1
results1[i, 2] <- predict(model1, newdata = data.frame(x=1))
}
ggplot() +
geom_line(data = data, aes(x = x, y = f), color = "black") +
geom_point(data = results1, aes(x = x, y = f_pred), color="red", shape=2)
results20 <- data.frame(x = 1, f_pred = 0)
for (i in 1:500) {
x <- seq(-3, 2, by = 0.1)
f <- true_relationship(x)
temp_observations <- f + rnorm(length(x), mean=0, sd=15)
model20 <- lm(temp_observations ~ poly(x, 20))
results20[i, 1] <- 1
results20[i, 2] <- predict(model20, newdata = data.frame(x=1))
}
ggplot() +
geom_line(data = data, aes(x = x, y = f), color = "black") +
geom_point(data = results20, aes(x = x, y = f_pred), color="orange", shape=2)
models <- vector("list", 25)
for (degree in 1:25) {
model <- lm(observations ~ poly(x, degree))
models[[degree]] <- model
}
results <- data.frame(degree = 1:25, rmse = 0)
for (degree in 1:25) {
predictions <- predict(models[[degree]], newdata = data.frame(x=x))
results[results$degree==degree, "rmse"] <-
sqrt((1/length(predictions))*sum((predictions-observations)ˆ2))
knitr::opts_chunk$set(echo = TRUE)
models <- vector("list", 25)
for (degree in 1:25) {
model <- lm(observations ~ poly(x, degree))
models[[degree]] <- model
}
results <- data.frame(degree = 1:25, rmse = 0)
for (degree in 1:25) {
predictions <- predict(models[[degree]], newdata = data.frame(x=x))
results[results$degree==degree, "rmse"] <-
sqrt((1/length(predictions))*sum((predictions-observations)^2))
}
ggplot() +
geom_line(data = results, aes(x = degree, y = rmse), color = "black")
results <- data.frame(degree = 1:25, rmse = 0)
for (degree in 1:25) {
predictions <- predict(models[[degree]], newdata = data.frame(x=x))
results[results$degree==degree, "rmse"] <-
sqrt((1/length(predictions))*sum((predictions-observations_new)^2))
}
ggplot() +
geom_line(data = results, aes(x = degree, y = rmse), color = "black")
View(results20)
View(models)
knitr::opts_chunk$set(echo = TRUE)
model <- lm(observations ~ poly(x, 4))
predictions=predict(model, newdata = data.frame(x=x))
data = data.frame(x=x, f=f, predictions=predictions)
ggplot(data, aes(x=x)) +
geom_line(aes(y = f), color = "black") +
geom_line(aes(y = predictions), color = "red", linetype="solid")
library(keras)
library(reticulate)
library(tensorflow)
tensorflow::tf_config()
use_virtualenv("my_tf_workspace")
library(keras)
library(reticulate)
library(tensorflow)
use_virtualenv("my_tf_workspace")
tensorflow::tf_config()
setwd("C:/Users/janna/Documents/Merrimack MSDS/DSE5004/Project 1")
data <- read.csv("data/Customer_Dataset_Data.csv", na.strings = "?", stringsAsFactors = F)
View(data)
library(tidyverse)
data <- data %>% column_to_rownames(., var = "CustomerID")
knitr::opts_chunk$set(echo = TRUE)
# Drop irrelavant columsns
data <- data[, -c(7,18,19,20,21,23,24,25,26,27,28,29,30,31,32)]
View(data)
data[1, "DataTenureOverTime"]
data$TotalOverTenure <- data$VoiceOverTenure + data$EquipmentOverTenure + data$DataOverTenure
as.numeric(data$VoiceOverTenure)
as.currency(data$VoiceOverTenure)
parse_number(data$VoiceOverTenure)
data$VoiceOverTenure <- parse_number(data$VoiceOverTenure)
data$VoiceLastMonth <- parse_number(data$VoiceLastMonth)
data$EquipmentOverTenure <- parse_number(data$EquipmentOverTenure)
data$EquipmentLastMonth <- parse_number(data$EquipmentLastMonth)
data$DataOverTenure <- parse_number(data$DataOverTenure)
data$DataLastMonth <- parse_number(data$DataLastMonth)
data$TotalOverTenure <- data$VoiceOverTenure + data$EquipmentOverTenure + data$DataOverTenure
data$TotalLastMonth <- data$VoiceLastMonth + data$EquipmentLastMonth + data$DataLastMonth
d <- ggplot(data = data, aes(Region)) +
geom_bar()
View(d)
d <- ggplot(data = data, aes(Region)) +
geom_bar()
d
data$HHIncome <- parse_number(data$HHIncome)
a <- ggplot(data = data, aes(HHIncome, TotalLastMonth)) +
geom_point()
a
data$VoiceOverTenure[is.na(data$VoiceOverTenure)] <- 0
data$VoiceOverTenure[is.na(data$VoiceOverTenure)] <- 0
data$EquipmentLastMonth[is.na(data$EquipmentLastMonth)] <- 0
data$VoiceOverTenure[is.na(data$VoiceOverTenure)] <- 0
data$VoiceLastMonth[is.na(data$VoiceLastMonth)] <- 0
data$EquipmentOverTenure[is.na(data$EquipmentOverTenure)] <- 0
data$EquipmentLastMonth[is.na(data$EquipmentLastMonth)] <- 0
data$DataOverTenure[is.na(data$DataOverTenure)] <- 0
data$DataLastMonth[is.na(data$DataLastMonth)] <- 0
data$TotalOverTenure <- data$VoiceOverTenure + data$EquipmentOverTenure + data$DataOverTenure
data$TotalByTenure <- data$TotalOverTenure / data$PhoneCoTenure
data$TotalLastMonth <- data$VoiceLastMonth + data$EquipmentLastMonth + data$DataLastMonth
a <- ggplot(data = data, aes(HHIncome, TotalLastMonth)) +
geom_point()
a
b <- ggplot(data = data, aes(Age, TVWacthingHours)) +
geom_point()
b
b <- ggplot(data = data, aes(Age, TVWatchingHours)) +
geom_point()
b
c <- ggplot(data = data, aes(HHIncome)) +
geom_histogram()
c <- ggplot(data = data, aes(HHIncome)) +
geom_histogram()
c
library(tidyverse)
library(caret)
process <- preProcess(as.data.frame(data$HHIncome), method = c("range"))
normIncome <- predict(process, as.data.frame(data$HHIncome))
data$IncomeScaled <- normIncome
View(normIncome)
process <- preProcess(as.data.frame(data$HHIncome), method = c("range"))
normIncome <- predict(process, as.data.frame(data$HHIncome))
data$IncomeScaled <- normIncome$`data$HHIncome`
e <- ggplot(data = data, aes(TotalLastMonth)) +
geom_histogram()
e <- ggplot(data = data, aes(TotalLastMonth)) +
geom_histogram()
e
f <- ggplot(data = data, aes(IncomeScaled)) +
geom_histogram()
f <- ggplot(data = data, aes(IncomeScaled)) +
geom_histogram()
f
process <- preProcess(as.data.frame(data$TotalLastMonth), method = c("range"))
normTLS<- predict(process, as.data.frame(data$TotalLastMonth))
# data$TotalLastMonthScaled <
View(normTLS)
process <- preProcess(as.data.frame(data$TotalLastMonth), method = c("range"))
normTLS<- predict(process, as.data.frame(data$TotalLastMonth))
data$TotalLastMonthScaled <- normTLS$`data$TotalLastMonth`
g = ggplot(data = data, aes(TotalLastMonthScaled)) +
geom_histogram()
g
h <- ggplot(data = data, aes(IncomeScaled, TotalLastMonthScaled)) +
geom_point()
h
install.packages("writexl")
data$Internet[!(data$Internet %in% c("Yes", "No"))] <- NULL
data$Internet[!(data$Internet %in% c("Yes", "No"))] <- NULL
library(writexl)
?write_xlsx
write_xlsx(data)
write_xlsx(data, path="C:\Users\janna\Documents\Merrimack MSDS\DSE5004\Project 1\df.xlsx")
write_xlsx(data, path="df.xlsx")
